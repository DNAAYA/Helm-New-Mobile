{"version":3,"file":"src_app_tasks_task-details_task-details_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAED;AAEtD,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAe;KAC3B;CACF,CAAC;IAMW,4BAA4B,SAA5B,4BAA4B;CAAG;AAA/B,4BAA4B;IAJxC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,4BAA4B,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACM;AACF;AAEA;AAEgC;AAEvB;IAWzC,qBAAqB,SAArB,qBAAqB;CAAG;AAAxB,qBAAqB;IATjC,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,sFAA4B;SAC7B;QACD,YAAY,EAAE,CAAC,+DAAe,CAAC;KAChC,CAAC;GACW,qBAAqB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;ACnBgB;AACD;AACmB;IAOvD,eAAe,SAAf,eAAe;IAG1B,YACU,cAA8B,EAC9B,SAA0B;QAD1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,cAAS,GAAT,SAAS,CAAiB;IAChC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YAC1D,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,IAAI;QACzB,CAAC,CAAC;IACJ,CAAC;CAEF;;YAzBQ,2DAAc;YACd,8EAAe;;AAOX,eAAe;IAL3B,wDAAS,CAAC;QACT,QAAQ,EAAE,kBAAkB;QAC5B,kKAAuC;;KAExC,CAAC;GACW,eAAe,CAiB3B;AAjB2B;;;;;;;;;;;;;;;ACT5B,iEAAe,8UAA8U,MAAM,aAAa,8HAA8H,kCAAkC,gBAAgB,mDAAmD,2FAA2F,aAAa,wJAAwJ,wHAAwH,eAAe,mDAAmD,2FAA2F,aAAa,wJAAwJ,qHAAqH,cAAc,mDAAmD,2FAA2F,aAAa,wJAAwJ,yHAAyH,kBAAkB,mDAAmD,2FAA2F,aAAa,wJAAwJ,6IAA6I,oBAAoB,mDAAmD,2FAA2F,aAAa,qHAAqH,4EAA4E,aAAa,kJAAkJ,oIAAoI,kBAAkB,mDAAmD,2FAA2F,aAAa,wJAAwJ,+IAA+I,qBAAqB,mDAAmD,2FAA2F,aAAa,wJAAwJ,kJAAkJ,wBAAwB,mDAAmD,2FAA2F,aAAa,wJAAwJ,yJAAyJ,yBAAyB,mDAAmD,2FAA2F,aAAa,wJAAwJ,gJAAgJ,gBAAgB,mDAAmD,2FAA2F,aAAa,wJAAwJ,uIAAuI,eAAe,mDAAmD,2FAA2F,aAAa,wJAAwJ,wPAAwP,uLAAuL,+FAA+F","sources":["./src/app/tasks/task-details/task-details-routing.module.ts","./src/app/tasks/task-details/task-details.module.ts","./src/app/tasks/task-details/task-details.page.ts","./src/app/tasks/task-details/task-details.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { TaskDetailsPage } from './task-details.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TaskDetailsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TaskDetailsPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TaskDetailsPageRoutingModule } from './task-details-routing.module';\r\n\r\nimport { TaskDetailsPage } from './task-details.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TaskDetailsPageRoutingModule\r\n  ],\r\n  declarations: [TaskDetailsPage]\r\n})\r\nexport class TaskDetailsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DatabaseService } from 'src/app/services/database.service';\r\n\r\n@Component({\r\n  selector: 'app-task-details',\r\n  templateUrl: './task-details.page.html',\r\n  styleUrls: ['./task-details.page.scss'],\r\n})\r\nexport class TaskDetailsPage implements OnInit {\r\n  taskID;\r\n  taskDetails;\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private dbService: DatabaseService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.taskID = this.activatedRoute.snapshot.params['id']\r\n    console.log('task id', this.taskID);\r\n    this.dbService.getTaskDetails(this.taskID).subscribe(task => {\r\n      console.log('task details', task);\r\n      this.taskDetails = task\r\n    })\r\n  }\r\n\r\n}\r\n","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Task Details</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <div *ngFor=\\\"let task of taskDetails\\\">\\r\\n    <div>\\r\\n      <h4 style=\\\"padding-left: 3%;\\\"> {{task.title}} </h4>\\r\\n    </div>\\r\\n    <ion-card class=\\\"card-style\\\" id=\\\"cardSpace\\\">\\r\\n      <ion-card-content style=\\\"color: #3C3C3B;\\\">\\r\\n        <h3> Venue Name: {{task.venueName}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"text\\\" placeholder=\\\"Edit Venue Name here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Category: {{task.category}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"text\\\" placeholder=\\\"Edit Category here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Address: {{task.address}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"text\\\" placeholder=\\\"Edit Address here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Contact Name: {{task.contactName}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"text\\\"\\r\\n          placeholder=\\\"Edit Contact Name here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Contact Number: {{task.contactNumber}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n          <ion-buttons style=\\\"display: inline;\\\" slot=\\\"\\\">\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"call\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"\\\" placeholder=\\\"Edit Contact Number here\\\">\\r\\n\\r\\n        </ion-input>\\r\\n\\r\\n\\r\\n        <h3> Surface Area: {{task.surfaceArea}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"text\\\"\\r\\n          placeholder=\\\"Edit Surface Area here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Number Of Floors: {{task.numberOfFloors}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"\\\"\\r\\n          placeholder=\\\"Edit Number Of Floors here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Number Of Bathrooms: {{task.numberOfBathrooms}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"text\\\"\\r\\n          placeholder=\\\"Edit Number Of Bathrooms here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Infrastructure Type: {{task.infrastructureType}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"text\\\"\\r\\n          placeholder=\\\"Edit Infrastructure Type here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Audit Date: {{task.auditDate}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"\\\" placeholder=\\\"Edit Audit Date here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n        <h3> Assessment visit's duration: {{task.timeSlot}}\\r\\n          <ion-buttons style=\\\"display: inline;\\\" icon-only item-end clear>\\r\\n            <ion-icon slot=\\\"end\\\" style=\\\"color: #3C3C3B; float: right;\\\" name=\\\"create-outline\\\"></ion-icon>\\r\\n          </ion-buttons>\\r\\n        </h3>\\r\\n        <ion-input class=\\\"border\\\" style=\\\"font-weight: lighter;\\\" required type=\\\"number\\\"\\r\\n          placeholder=\\\"Edit Time Slot here\\\">\\r\\n        </ion-input>\\r\\n\\r\\n      </ion-card-content>\\r\\n    </ion-card>\\r\\n    <div>\\r\\n      <div>\\r\\n        <!-- <ion-button class=\\\"button\\\"  style=\\\"float: left;\\\" (click)=\\\"clearStorage()\\\"  > Clear Storage </ion-button> -->\\r\\n        <ion-button class=\\\"button\\\" *ngIf=\\\"task.status === true\\\" routerLink=\\\"/priorities\\\" style=\\\"float: left;\\\"> start\\r\\n        </ion-button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}