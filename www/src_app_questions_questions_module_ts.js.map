{"version":3,"file":"src_app_questions_questions_module_ts.js","mappings":"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","sources":["./src/app/questionTypes/input/input.component.ts","./src/app/questionTypes/yes-no-input/yes-no-input.component.ts","./src/app/questionTypes/yes-no/yes-no.component.ts","./src/app/questions/questions-routing.module.ts","./src/app/questions/questions.module.ts","./src/app/questions/questions.page.ts","./src/app/replace.pipe.ts","./src/app/questionTypes/input/input.component.html","./src/app/questionTypes/yes-no-input/yes-no-input.component.html","./src/app/questionTypes/yes-no/yes-no.component.html","./src/app/questions/questions.page.html"],"sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Question } from 'src/app/models/question';\r\nimport { threadId } from 'worker_threads';\r\n\r\n@Component({\r\n  selector: 'app-input',\r\n  templateUrl: './input.component.html',\r\n  styleUrls: ['./input.component.scss'],\r\n})\r\nexport class InputComponent implements OnInit{\r\n  @Input() question: Question ; \r\n  questionWithInput = [];\r\n  \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    let _measurement0 = this.question.question.includes('/measurement0/');\r\n    let _measurement1 = this.question.question.includes('/measurement1/');\r\n    let _number = this.question.question.includes('/number/');\r\n    let _number0 = this.question.question.includes('/number0/');\r\n    let _number1 = this.question.question.includes('/number1/');\r\n\r\n    let _text = this.question.question.includes('/text/');\r\n\r\n\r\n    // _measurement0 && _measurement1\r\n    if(_measurement0 && _measurement1 && _text) {\r\n\r\n      let part1 = this.question.question.split('/measurement0/');\r\n      let part2 = part1[1].split('/measurement1/');\r\n      let part3 = part2[1].split('/text/')\r\n\r\n     this.questionWithInput.push(part1[0], part2[0], ...part3)\r\n     //console.log('split question 3 INPUTS >>', this.questionWithInput)\r\n\r\n     }else if(_measurement0 && _measurement1 ) {\r\n     let part1 = this.question.question.split('/measurement0/');\r\n     let part2 = part1[1].split('/measurement1/');\r\n      this.questionWithInput.push(part1[0], ...part2)\r\n     //console.log('split question ', this.questionWithInput);\r\n     //console.log('split question 2 INPUTS >>', this.questionWithInput)\r\n\r\n    } \r\n    // _measurement0 && _measurement1\r\n    else if (_measurement0 && !_measurement1) {\r\n     let part1 = this.question.question.split('/measurement0/');\r\n      this.questionWithInput.push(...part1)\r\n     //console.log('split question 1 INPUTS >>', this.questionWithInput)\r\n\r\n    } \r\n    // number \r\n    else if (_number && !_measurement0 && !_measurement1) {\r\n      let part1 = this.question.question.split('/number/');\r\n     // console.log('contain number', part1)\r\n      this.questionWithInput.push(...part1)\r\n    }\r\n    else if (_measurement0 && _number) {\r\n      let part1 = this.question.question.split('/measurement0/');\r\n      let part2 = part1[1].split('/number/');\r\n      this.questionWithInput.push(part1[0], ...part2)\r\n    } else if (_number0 && _number1) {\r\n      let part1 = this.question.question.split('/number0/');\r\n      let part2 = part1[1].split('/number1/');\r\n      this.questionWithInput.push(part1[0], ...part2)\r\n    } else if (_number0) {\r\n      let part1 = this.question.question.split('/number0/');\r\n      this.questionWithInput.push(...part1)\r\n     }\r\n  }\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Question } from 'src/app/models/question';\r\n\r\n@Component({\r\n  selector: 'app-yes-no-input',\r\n  templateUrl: './yes-no-input.component.html',\r\n  styleUrls: ['./yes-no-input.component.scss'],\r\n})\r\nexport class YesNoInputComponent implements OnInit {\r\n  @Input() question: Question ; \r\n  rightAnswer; wrongAnswer;\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    // console.log('question List', this.question);\r\n    if(this.question.right_en.includes('/number/') || this.question.wrong_en.includes('/number/')) {\r\n      this.rightAnswer = this.question.right_en.split('/number/');\r\n      this.wrongAnswer = this.question.wrong_en.split('/number/');\r\n    } else if (this.question.right_en.includes('/measurement0/') || this.question.wrong_en.includes('/measurement0/')) {\r\n      this.rightAnswer = this.question.right_en.split('/measurement0/');\r\n      this.wrongAnswer = this.question.wrong_en.split('/measurement0/');\r\n    }\r\n    // get right question will display while answer is yes\r\n    // console.log('rightanswer', this.rightAnswer);\r\n\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Question } from 'src/app/models/question';\r\n\r\n@Component({\r\n  selector: 'app-yes-no',\r\n  templateUrl: './yes-no.component.html',\r\n  styleUrls: ['./yes-no.component.scss'],\r\n})\r\nexport class YesNoComponent implements OnInit {\r\n  @Input() question: Question; \r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log('changes', this.question)\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { QuestionsPage } from './questions.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: QuestionsPage\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class QuestionsPageRoutingModule {}\r\n","import { Input, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { QuestionsPageRoutingModule } from './questions-routing.module';\r\n\r\nimport { QuestionsPage } from './questions.page';\r\nimport { YesNoComponent } from '../questionTypes/yes-no/yes-no.component';\r\nimport { YesNoInputComponent } from '../questionTypes/yes-no-input/yes-no-input.component';\r\nimport { InputComponent } from '../questionTypes/input/input.component';\r\nimport { ReplacePipe } from '../replace.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    QuestionsPageRoutingModule\r\n  ],\r\n  declarations: [\r\n    QuestionsPage, \r\n    YesNoComponent,\r\n    YesNoInputComponent,\r\n    InputComponent,\r\n    ReplacePipe,\r\n  ],\r\n  exports: [ReplacePipe]\r\n})\r\nexport class QuestionsPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Division } from '../models/division';\r\nimport { DuplicatedQuestion } from '../models/duplicatedQuestion';\r\nimport { Question } from '../models/question';\r\nimport { Subpriority } from '../models/Subpriority';\r\nimport { DatabaseService } from '../services/database.service';\r\n\r\n@Component({\r\n  selector: 'app-questions',\r\n  templateUrl: './questions.page.html',\r\n  styleUrls: ['./questions.page.scss'],\r\n})\r\nexport class QuestionsPage implements OnInit {\r\n  questionList = [];\r\n  duplicatedquestions= [];\r\n  indexofDivision;\r\n  _previousDiv: Division;\r\n  _nextDiv: Division;\r\n  _thisDivision: Division;\r\n  type;\r\n  constructor(\r\n    private activatedRoute: ActivatedRoute,\r\n    private dbService: DatabaseService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n   let divID = this.activatedRoute.snapshot.params['divId'];\r\n   let subId = this.activatedRoute.snapshot.params['subId'];\r\n   let prId = this.activatedRoute.snapshot.params['prId'];\r\n    this.type = this.activatedRoute.snapshot.params['type'];\r\n\r\n   console.log('#) sub ID from router: ', subId);\r\n   console.log('#) priority ID from router: ', prId);\r\n   console.log('#) div ID from router: ', divID);\r\n   console.log('#) type  from router: ', this.type);\r\n\r\n     // console.log('division id:', divID, subId, prId, type);\r\n     if(this.type == 'main') {\r\n        // console.log('main question divsion id', divID)\r\n        //get question list buy division id\r\n       await this.dbService.getQuestionByDivID(divID).then((questions: Question[]) => {\r\n          this.questionList = questions ;\r\n          console.log('main question list >>>', this.questionList);\r\n        })\r\n    } else {\r\n       await this.getDuplicatedQuestion(divID);\r\n        console.log('duplicated question ..', this.questionList)\r\n\r\n    }\r\n\r\n    // get divisions\r\n    await this.getDivision(subId, divID);\r\n  }\r\n\r\n\r\n\r\n  getDivision(subId, divID) {\r\n    this.dbService.getDivisionBySubID(subId).then((divs: Division[]) => {\r\n      console.log('divisions list', divs);\r\n      this.indexofDivision = divs.findIndex(i => i.divison_ID == divID);\r\n      this._thisDivision = divs[this.indexofDivision];\r\n      this._previousDiv = divs[this.indexofDivision - 1];\r\n      this._nextDiv = divs[this.indexofDivision + 1];\r\n\r\n      console.log('previous division', this._previousDiv);\r\n      console.log('next division', this._nextDiv);\r\n\r\n    })\r\n  }\r\n  getDuplicatedQuestion(divID) {\r\n    console.log('getDuplicatedDiv ..', divID)\r\n    this.dbService.getDuplicatedQuestionByDuplicatedDivision(divID).then((res: DuplicatedQuestion[]) => {\r\n     // console.log('duplicated questions', res);\r\n      this.questionList = res\r\n    })\r\n  }\r\n\r\n  saveAnswer() {\r\n    let questID =  \"-Mx0NZwuxdH96kh-unRZ\";\r\n\r\n    this.questionList.forEach(q => {\r\n\r\n      this.dbService.sendAnswer(questID, q);\r\n    })\r\n  }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'replace'\r\n})\r\nexport class ReplacePipe implements PipeTransform {\r\n\r\n  constructor() {\r\n    \r\n  }\r\n \r\n  transform(value: any, args?: any): string {\r\n    const item = document.createElement('ion-item');\r\n    const input = document.createElement('ion-input');\r\n\r\n    //  console.log('replaace pipe value', value, );\r\n   //   console.log(' replace pipe args', args)\r\n    // For each argument\r\n    for(var key in args) {\r\n      console.log('replace pipe', args[key]);\r\n      \r\n      if(value && args[key] == 'input') {\r\n\r\n        value = value.replace(key , item.appendChild(input).innerHTML)\r\n\r\n      }\r\n    }\r\n    return value;\r\n}\r\n\r\n}\r\n","export default \"    <!-- Question with 2 inputs -->\\r\\n    <div *ngIf=\\\"questionWithInput.length == 3\\\">\\r\\n      <p>\\r\\n        {{questionWithInput[0]}}\\r\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"question?.inputs[0].value\\\"></ion-input>\\r\\n        {{questionWithInput[1]}}\\r\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"question?.inputs[1].value\\\"></ion-input>\\r\\n        {{questionWithInput[2]}}\\r\\n      </p>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"questionWithInput.length == 2\\\">\\r\\n      <p>\\r\\n        {{questionWithInput[0]}}\\r\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"question?.inputs[0].value\\\"></ion-input>\\r\\n        {{questionWithInput[1]}}\\r\\n      </p>\\r\\n    </div>\\r\\n\\r\\n    <!-- Question with 3 inputs -->\\r\\n    <div *ngIf=\\\"questionWithInput.length == 4\\\">\\r\\n      <p>\\r\\n        {{questionWithInput[0]}}\\r\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"question?.inputs[0].value\\\"></ion-input>\\r\\n        {{questionWithInput[1]}}\\r\\n        <ion-input type=\\\"number\\\" [(ngModel)]=\\\"question?.inputs[1].value\\\"></ion-input>\\r\\n        {{questionWithInput[2]}}\\r\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"question?.inputs[2].value\\\"></ion-input>\\r\\n      </p>\\r\\n    </div>\";","export default \"  \\r\\n\\r\\n    <ion-radio-group [(ngModel)]=\\\"question.answer\\\">\\r\\n      <ion-label>  {{question.question}} </ion-label>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-label>Yes</ion-label>\\r\\n          <ion-radio [value]=\\\"question.right_en\\\">\\r\\n          </ion-radio>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-label>No</ion-label>\\r\\n          <ion-radio [value]=\\\"question.wrong_en\\\">\\r\\n          </ion-radio>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-label>N/A</ion-label>\\r\\n          <ion-radio value=\\\"N/A\\\"></ion-radio>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-radio-group>\\r\\n    <ion-label *ngIf=\\\"question.answer == question.wrong_en\\\">{{question.wrong_en}}</ion-label>\\r\\n    <div *ngIf=\\\"question.answer == question.right_en\\\">\\r\\n      <p> {{rightAnswer[0]}}\\r\\n        <ion-input type=\\\"number\\\" placeholder=\\\"number....\\\"></ion-input>\\r\\n        {{rightAnswer[1]}}\\r\\n      </p>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\";","export default \"\\r\\n\\r\\n    <ion-radio-group [(ngModel)]=\\\"question.answer\\\">\\r\\n      <ion-label>{{question.question}} </ion-label>\\r\\n      <ion-row class=\\\"ion-padding-top\\\">\\r\\n        <ion-col>\\r\\n          <ion-label>Yes</ion-label>\\r\\n          <ion-radio [value]=\\\"question.right_en\\\">\\r\\n          </ion-radio>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-label>No</ion-label>\\r\\n          <ion-radio [value]=\\\"question.wrong_en\\\">\\r\\n          </ion-radio>\\r\\n        </ion-col>\\r\\n        <ion-col>\\r\\n          <ion-label>N/A</ion-label>\\r\\n          <ion-radio value=\\\"N/A\\\"></ion-radio>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n<!-- <ion-text color=\\\"danger\\\" >\\r\\n  <h4 >There is No Question in this division please change the Previous Answer</h4>\\r\\n</ion-text> -->\\r\\n\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title class=\\\"headerFontSize\\\">{{_thisDivision?.division_name}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <ion-list>\\r\\n      <ion-item *ngFor=\\\"let q of questionList\\\" class=\\\"ion-padding card-style\\\">\\r\\n        <app-yes-no *ngIf=\\\"q?.type == 'Yes/No'\\\" [question]=\\\"q\\\"></app-yes-no>\\r\\n        <app-input *ngIf=\\\"q?.type == 'Input'\\\" [question]=\\\"q\\\"></app-input>\\r\\n        <app-yes-no-input *ngIf=\\\"q?.type == 'Yes/No With Input'\\\" [question]=\\\"q\\\"></app-yes-no-input>\\r\\n\\r\\n        <ion-buttons [routerLink]=\\\"['/details/' + q.question_ID]\\\" routerLinkActive=\\\"router-link-active\\\"  slot=\\\"end\\\" icon-only item-end clear>\\r\\n          <ion-icon  name=\\\"chevron-forward-outline\\\">\\r\\n          </ion-icon>\\r\\n        </ion-buttons>\\r\\n\\r\\n      </ion-item>\\r\\n    </ion-list>  \\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-button fill=\\\"outline\\\" color=\\\"secondary\\\" *ngIf=\\\"_previousDiv\\\"\\r\\n        [routerLink]=\\\"['/questions/' + type + '/'+ _previousDiv.divison_ID + '/' + _previousDiv.sub_ID + '/' + _previousDiv.priority_ID]\\\"\\r\\n        routerLinkActive=\\\"router-link-active\\\">\\r\\n        <ion-icon name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n        <!-- {{_previousDiv?.division_name}} -->\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n\\r\\n      <ion-button  color=\\\"primary\\\" (click)=\\\"saveAnswer()\\\">\\r\\n        Save\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n\\r\\n\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-button\\r\\n        [routerLink]=\\\"['/questions/'+ type + '/' +_nextDiv.divison_ID + '/' + _nextDiv.sub_ID + '/' + _nextDiv.priority_ID]\\\"\\r\\n        routerLinkActive=\\\"router-link-active\\\" fill=\\\"outline\\\" color=\\\"secondary\\\" *ngIf=\\\"_nextDiv\\\">\\r\\n        <!-- {{_nextDiv?.division_name}} -->\\r\\n        <ion-icon name=\\\"arrow-forward-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-footer>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}