{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.ts","./src/app/login/login.page.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LoginPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPageRoutingModule } from './login-routing.module';\r\n\r\nimport { LoginPage } from './login.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    LoginPageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [LoginPage]\r\n})\r\nexport class LoginPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { LoadingController, NavController } from '@ionic/angular';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  signIn_form: FormGroup;\r\n  showPassword = false;\r\n  passwordToggleIcon ='eye';\r\n  errorMessage: string = '';\r\n\r\n  // el validation messages el betezhar fel login page\r\n  validation_messages = {\r\n    'email': [\r\n      { type: 'required', message: 'Email is required.' },\r\n      { type: 'pattern', message: 'Please enter a valid email.' }\r\n    ],\r\n    'password': [\r\n      { type: 'required', message: 'Password is required.' },\r\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\r\n    ]\r\n  };\r\n  constructor(\r\n    private  formBuilder: FormBuilder,\r\n    private navCtrl: NavController,\r\n    private authServ: AuthService,\r\n    private db: AngularFirestore,\r\n    private loadingController: LoadingController\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // the validations form\r\n    this.signIn_form = this.formBuilder.group({\r\n      email: new FormControl('', Validators.compose([\r\n        Validators.required,\r\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\r\n      ])),\r\n      password: new FormControl('', Validators.compose([\r\n        Validators.minLength(5),\r\n        Validators.required\r\n      ])),\r\n    });\r\n\r\n  }\r\n\r\n  async loginUser() {\r\n    this.authServ.loginUser(this.signIn_form.getRawValue())\r\n    .then(res => {\r\n      const id = res.user.uid \r\n       this.db.doc(`users/${id}`).valueChanges().subscribe(res =>{\r\n        if(!res['userPassword']){ \r\n          this.errorMessage = \"\";\r\n          this.navCtrl.navigateForward('/create-new-password');  \r\n        }\r\n        else{\r\n          this.errorMessage = \"\";\r\n          this.navCtrl.navigateForward('/tasks');\r\n        }\r\n      });\r\n    }, err => {\r\n      this.errorMessage = err.message;\r\n    })\r\n\r\n    let loading = await this.loadingController.create({\r\n      message: 'Please wait...'\r\n    });\r\n  \r\n    loading.present();\r\n  \r\n    setTimeout(() => {\r\n      loading.dismiss();\r\n    }, 1500); \r\n  }\r\n\r\n  // Start New Show Password Button\r\n  togglePassword(): void{\r\n    this.showPassword = !this.showPassword ;\r\n\r\n    if (this.passwordToggleIcon == 'eye') {\r\n      this.passwordToggleIcon = 'eye-off'\r\n    } else {\r\n      this.passwordToggleIcon = 'eye';\r\n    }\r\n  }\r\n\r\n}\r\n","export default \"<!-- Ayman Edit -->\\r\\n\\r\\n\\r\\n<ion-header>\\r\\n  <!-- <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Sign In</ion-title>\\r\\n  </ion-toolbar> -->\\r\\n</ion-header>\\r\\n\\r\\n<ion-content class=\\\"ion-padding\\\">\\r\\n  <!-- <h1> SIGN IN </h1> -->\\r\\n<img src=\\\"../../assets/Helm-Consulting.png\\\" width=\\\"180\\\" class=\\\"center\\\">\\r\\n  <form class=\\\"form\\\" style=\\\"padding-top: 10%;\\\" [formGroup]=\\\"signIn_form\\\" (ngSubmit)=\\\"loginUser()\\\">\\r\\n\\r\\n    <!-- User Email -->\\r\\n    <ion-item>\\r\\n      <!--<ion-label position=\\\"floating\\\">Email</ion-label>-->\\r\\n      <ion-icon id=\\\"iconColor\\\" slot=\\\"start\\\" name=\\\"person\\\"></ion-icon>\\r\\n      <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" placeholder=\\\"Email\\\"></ion-input>\\r\\n    </ion-item>\\r\\n\\r\\n    <!-- User Email Error Message -->\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\r\\n        <div style=\\\"color: red;\\\" class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"signIn_form.get('email').hasError(validation.type) && (signIn_form.get('email').dirty || signIn_form.get('email').touched)\\\">\\r\\n          <ion-icon name=\\\"alert-circle-outline\\\" style=\\\"color: red;\\\"></ion-icon>\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <!-- User Password -->\\r\\n    <ion-item>\\r\\n     <!--<ion-label position=\\\"floating\\\" >Password</ion-label>-->\\r\\n      <ion-icon id=\\\"iconColor\\\" slot=\\\"start\\\" name=\\\"lock-closed\\\"></ion-icon>\\r\\n      <!--<ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required placeholder=\\\"Password\\\"></ion-input>-->\\r\\n      <ion-input [type]=\\\"showPassword ? 'text' : 'password'\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\"\\r\\n      required placeholder=\\\"Password\\\"></ion-input>      <!--<ion-icon id=\\\"iconColor\\\" slot=\\\"end\\\" [name]=\\\"passwordToggleIcon\\\" (click)=\\\"togglePassword()\\\"></ion-icon>-->\\r\\n    </ion-item>\\r\\n\\r\\n    <!-- User Password Error Message -->\\r\\n    <div class=\\\"validation-errors\\\">\\r\\n      <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\r\\n        <div style=\\\"color: red;\\\" class=\\\"error-message\\\"\\r\\n          *ngIf=\\\"signIn_form.get('password').hasError(validation.type) && (signIn_form.get('password').dirty || signIn_form.get('password').touched)\\\">\\r\\n          <ion-icon name=\\\"alert-circle-outline\\\" style=\\\"color: red;\\\"></ion-icon>\\r\\n          {{ validation.message }}\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n\\r\\n  <br/>\\r\\n\\r\\n  <!-- Buttons -->\\r\\n<ion-grid>\\r\\n   \\r\\n<!-- Show Password Button -->\\r\\n      <ion-button (click)=\\\"togglePassword()\\\" style=\\\"text-transform: capitalize; color: white\\\" expand=\\\"block\\\"class=\\\"ion-padding\\\"> \\r\\n        <ion-icon style=\\\"color: white;\\\" slot=\\\"start\\\" [name]=\\\"passwordToggleIcon\\\" (click)=\\\"togglePassword()\\\"></ion-icon>\\r\\n        Show Password \\r\\n      </ion-button>\\r\\n\\r\\n\\r\\n<!-- Sign In Button -->\\r\\n      <ion-button type=\\\"submit\\\"  expand=\\\"block\\\" class=\\\"ion-padding\\\">\\r\\n        <ion-icon style=\\\"color: white;\\\" slot=\\\"start\\\" name=\\\"log-in-outline\\\"></ion-icon>\\r\\n        Sign In</ion-button>\\r\\n      <br/>\\r\\n\\r\\n\\r\\n   \\r\\n</ion-grid>\\r\\n  \\r\\n    \\r\\n      \\r\\n    <label class=\\\"error-message\\\">\\r\\n      {{errorMessage}}\\r\\n    </label>\\r\\n\\r\\n    <br/>\\r\\n  \\r\\n    <!-- Forgot Password -->\\r\\n    <a style=\\\" text-align: center; display: block; color: white; text-decoration: none;\\\"  routerLink=\\\"/forgot-password\\\"> Forgot Password </a>\\r\\n\\r\\n  </form>\\r\\n\\r\\n  <!-- <button (click)=\\\"test()\\\">TEST</button> -->\\r\\n\\r\\n</ion-content>\\r\\n\";"],"names":[],"sourceRoot":"webpack:///"}